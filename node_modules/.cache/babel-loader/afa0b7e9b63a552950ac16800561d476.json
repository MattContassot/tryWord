{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Keyboard.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { KEYS } from '../services/constants';\nimport { backspace } from '../services/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Keyboard extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = _ref => {\n      let {\n        target: {\n          id\n        }\n      } = _ref;\n      const {\n        setKey\n      } = this.props;\n      setKey(id, true);\n    };\n\n    this.handleDelete = () => {\n      const {\n        setKey\n      } = this.props;\n      const currentLetter = document.querySelector('.letterOnFocus').id;\n      if (currentLetter.substring(4, 5) !== 1) console.log(currentLetter.substring(4, 5));\n      setKey('', true);\n    };\n  }\n\n  render() {\n    const {\n      lastLetter\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"footer\", {\n      children: KEYS.map((key, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        id: key,\n        type: \"button\",\n        onClick: key === 'รง' ? this.handleDelete : this.handleClick,\n        className: \"key\",\n        disabled: key === 'ENTER' && lastLetter ? true : false,\n        children: key === 'รง' ? backspace() : key\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref2 => {\n  let {\n    lastLetter\n  } = _ref2;\n  return {\n    lastLetter\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: (key, virtualKeyboard) => dispatch(sendKeyDown(key, virtualKeyboard))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keyboard);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Keyboard.js"],"names":["React","Component","connect","sendKeyDown","KEYS","backspace","Keyboard","handleClick","target","id","setKey","props","handleDelete","currentLetter","document","querySelector","substring","console","log","render","lastLetter","map","key","index","mapStateToProps","mapDispatchToProps","dispatch","virtualKeyboard"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,QAAqB,uBAArB;AACA,SAASC,SAAT,QAA0B,mBAA1B;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;;AAAA,SAC/BM,WAD+B,GACjB,QAAwB;AAAA,UAAvB;AAAEC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAV,OAAuB;AACpC,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AAEAD,MAAAA,MAAM,CAACD,EAAD,EAAK,IAAL,CAAN;AACD,KAL8B;;AAAA,SAO/BG,YAP+B,GAOhB,MAAM;AACnB,YAAM;AAAEF,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACA,YAAME,aAAa,GAAGC,QAAQ,CAACC,aAAT,CAAuB,gBAAvB,EAAyCN,EAA/D;AAEA,UAAII,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,MAAkC,CAAtC,EAAyCC,OAAO,CAACC,GAAR,CAAYL,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,CAAZ;AAEzCN,MAAAA,MAAM,CAAC,EAAD,EAAK,IAAL,CAAN;AACD,KAd8B;AAAA;;AAgB/BS,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAiB,KAAKT,KAA5B;AAEA,wBACE;AAAA,gBAEIP,IAAI,CAACiB,GAAL,CAAS,CAACC,GAAD,EAAMC,KAAN,kBACP;AACE,QAAA,EAAE,EAAGD,GADP;AAEE,QAAA,IAAI,EAAC,QAFP;AAIE,QAAA,OAAO,EAAGA,GAAG,KAAK,GAAR,GAAc,KAAKV,YAAnB,GAAkC,KAAKL,WAJnD;AAKE,QAAA,SAAS,EAAC,KALZ;AAME,QAAA,QAAQ,EAAGe,GAAG,KAAK,OAAR,IAAmBF,UAAnB,GAAgC,IAAhC,GAAuC,KANpD;AAAA,kBAQGE,GAAG,KAAK,GAAR,GAAcjB,SAAS,EAAvB,GAA4BiB;AAR/B,SAGQC,KAHR;AAAA;AAAA;AAAA;AAAA,cADF;AAFJ;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AArC8B;;AAwCjC,MAAMC,eAAe,GAAG;AAAA,MAAC;AAAEJ,IAAAA;AAAF,GAAD;AAAA,SAAqB;AAC3CA,IAAAA;AAD2C,GAArB;AAAA,CAAxB;;AAIA,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxChB,EAAAA,MAAM,EAAE,CAACY,GAAD,EAAMK,eAAN,KAA0BD,QAAQ,CAACvB,WAAW,CAACmB,GAAD,EAAMK,eAAN,CAAZ;AADF,CAAf,CAA3B;;AAIA,eAAezB,OAAO,CAACsB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CnB,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { KEYS } from '../services/constants';\nimport { backspace } from '../services/icons';\n\nclass Keyboard extends Component {\n  handleClick = ({ target: { id } }) => {\n    const { setKey } = this.props;\n\n    setKey(id, true);\n  }\n\n  handleDelete = () => {\n    const { setKey } = this.props;\n    const currentLetter = document.querySelector('.letterOnFocus').id;\n\n    if (currentLetter.substring(4, 5) !== 1) console.log(currentLetter.substring(4, 5));\n\n    setKey('', true);\n  }\n\n  render() {\n    const { lastLetter } = this.props;\n\n    return (\n      <footer>\n        {\n          KEYS.map((key, index) => (\n            <button\n              id={ key }\n              type=\"button\"\n              key={ index }\n              onClick={ key === 'รง' ? this.handleDelete : this.handleClick }\n              className=\"key\"\n              disabled={ key === 'ENTER' && lastLetter ? true : false }\n            >\n              {key === 'รง' ? backspace() : key}\n            </button>\n          ))\n        }\n      </footer>\n    );\n  }\n}\n\nconst mapStateToProps = ({ lastLetter }) => ({\n  lastLetter,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key, virtualKeyboard) => dispatch(sendKeyDown(key, virtualKeyboard)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Keyboard);\n"]},"metadata":{},"sourceType":"module"}