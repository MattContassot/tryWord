{"ast":null,"code":"import { WORDS, WORD_LENGTH } from \"./constants\";\n\nfunction generateRandomNumber() {\n  const min = Math.ceil(0);\n  const max = Math.floor(WORDS.length);\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nexport function selectWord() {\n  return WORDS[generateRandomNumber()];\n}\nexport function validateWord(word, wordTried, attempt) {\n  console.log(word);\n  const wordArray = Array.from(word);\n  const attemptId = attempt.substring(7, 8);\n\n  for (let i = 0; i < WORD_LENGTH; i += 1) {\n    let currentLetter = '';\n    let letterOnKeyboard = '';\n    currentLetter = document.querySelector(`#a${attemptId}-l${i + 1}`);\n    letterOnKeyboard = document.querySelector(`#${currentLetter.value}`);\n    console.log(letterOnKeyboard);\n\n    if (wordArray[i] === wordTried[i]) {\n      currentLetter.classList.add('correctLetter');\n      wordArray.splice(i, 1);\n    } else if (wordArray.includes(wordTried[i])) {\n      currentLetter.classList.add('letterIncluded');\n      wordArray.splice(i, 1);\n    } else currentLetter.classList.add('wrongLetter');\n  }\n}\nexport const focusNextLetter = currentLetter => {\n  const onFocus = document.querySelector('.letterOnFocus');\n  onFocus.classList.remove('letterOnFocus');\n  const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n  let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n  if (lastNumberId > 5) {\n    const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n    nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n  }\n\n  if (currentLetter === 'a6-l5') return console.log('chamar o placar');\n  nextLetter.classList.add('letterOnFocus');\n  return nextLetter.focus();\n};","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/services/functions.js"],"names":["WORDS","WORD_LENGTH","generateRandomNumber","min","Math","ceil","max","floor","length","random","selectWord","validateWord","word","wordTried","attempt","console","log","wordArray","Array","from","attemptId","substring","i","currentLetter","letterOnKeyboard","document","querySelector","value","classList","add","splice","includes","focusNextLetter","onFocus","remove","lastNumberId","Number","nextLetter","nextAttempt","focus"],"mappings":"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","sourcesContent":["import { WORDS, WORD_LENGTH } from \"./constants\";\n\nfunction generateRandomNumber() {\n  const min = Math.ceil(0);\n  const max = Math.floor(WORDS.length);\n\n  return Math.floor((Math.random() * (max - min + 1)) + min);\n}\n\nexport function selectWord() {\n  return WORDS[generateRandomNumber()];\n}\n\nexport function validateWord(word, wordTried, attempt) {\n  console.log(word);\n  const wordArray = Array.from(word);\n  const attemptId = attempt.substring(7, 8);\n\n  for (let i = 0; i < WORD_LENGTH; i += 1) {\n    let currentLetter = '';\n    let letterOnKeyboard = '';\n    currentLetter = document.querySelector(`#a${attemptId}-l${i + 1}`);\n    letterOnKeyboard = document.querySelector(`#${currentLetter.value}`);\n\n    console.log(letterOnKeyboard);\n\n    if (wordArray[i] === wordTried[i]) {\n      currentLetter.classList.add('correctLetter');\n      wordArray.splice(i, 1);\n    }\n\n    else if (wordArray.includes(wordTried[i])) {\n      currentLetter.classList.add('letterIncluded');\n      wordArray.splice(i, 1);\n    }\n    else currentLetter.classList.add('wrongLetter');\n  }\n}\n\nexport const focusNextLetter = (currentLetter) => {\n  const onFocus = document.querySelector('.letterOnFocus');\n  onFocus.classList.remove('letterOnFocus');\n\n  const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n  let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n  if (lastNumberId > 5) {\n    const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n    nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n  }\n\n  if (currentLetter === 'a6-l5') return console.log('chamar o placar');\n\n  nextLetter.classList.add('letterOnFocus');\n\n  return nextLetter.focus();\n};"]},"metadata":{},"sourceType":"module"}