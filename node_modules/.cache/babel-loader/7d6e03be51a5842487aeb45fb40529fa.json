{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Header.js\";\nimport React, { Component } from 'react';\nimport { renderStats } from '../store/actions';\nimport { help, stats, config } from '../services/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Header extends Component {\n  constructor() {\n    super(...arguments);\n\n    this.handleClick = _ref => {\n      let {\n        currentTarget: {\n          id\n        }\n      } = _ref;\n      const {\n        renderStats\n      } = this.props;\n      console.log(id);\n      if (id === 'stats') renderStats(true);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"header\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"help\",\n        onClick: this.handleClick,\n        children: help()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Try Word\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"stats\",\n        onClick: this.handleClick,\n        children: stats()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"settings\",\n        onClick: this.handleClick,\n        children: config()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  renderStats: payload => dispatch(renderStats(payload))\n});\n\nexport default connect(null, mapDispatchToProps)(Header);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Header.js"],"names":["React","Component","renderStats","help","stats","config","Header","handleClick","currentTarget","id","props","console","log","render","mapDispatchToProps","dispatch","payload","connect"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,mBAApC;;;AAEA,MAAMC,MAAN,SAAqBL,SAArB,CAA+B;AAAA;AAAA;;AAAA,SAC7BM,WAD6B,GACf,QAA+B;AAAA,UAA9B;AAAEC,QAAAA,aAAa,EAAE;AAAEC,UAAAA;AAAF;AAAjB,OAA8B;AAC3C,YAAM;AAAEP,QAAAA;AAAF,UAAkB,KAAKQ,KAA7B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,EAAZ;AACA,UAAIA,EAAE,KAAK,OAAX,EAAoBP,WAAW,CAAC,IAAD,CAAX;AACrB,KAL4B;AAAA;;AAO7BW,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAG,QAAA,EAAE,EAAC,MAAN;AAAa,QAAA,OAAO,EAAG,KAAKN,WAA5B;AAAA,kBAA2CJ,IAAI;AAA/C;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAG,QAAA,EAAE,EAAC,OAAN;AAAc,QAAA,OAAO,EAAG,KAAKI,WAA7B;AAAA,kBAA4CH,KAAK;AAAjD;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAG,QAAA,EAAE,EAAC,UAAN;AAAiB,QAAA,OAAO,EAAG,KAAKG,WAAhC;AAAA,kBAA+CF,MAAM;AAArD;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAhB4B;;AAmB/B,MAAMS,kBAAkB,GAAIC,QAAD,KAAe;AACxCb,EAAAA,WAAW,EAAGc,OAAD,IAAaD,QAAQ,CAACb,WAAW,CAACc,OAAD,CAAZ;AADM,CAAf,CAA3B;;AAIA,eAAeC,OAAO,CAAC,IAAD,EAAOH,kBAAP,CAAP,CAAkCR,MAAlC,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { renderStats } from '../store/actions';\nimport { help, stats, config } from '../services/icons';\n\nclass Header extends Component {\n  handleClick = ({ currentTarget: { id } }) => {\n    const { renderStats } = this.props;\n    console.log(id);\n    if (id === 'stats') renderStats(true);\n  }\n\n  render() {\n    return (\n      <header>\n        <p id=\"help\" onClick={ this.handleClick }>{help()}</p>\n        <h1>Try Word</h1>\n        <p id=\"stats\" onClick={ this.handleClick }>{stats()}</p>\n        <p id=\"settings\" onClick={ this.handleClick }>{config()}</p>\n      </header>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  renderStats: (payload) => dispatch(renderStats(payload)),\n});\n\nexport default connect(null, mapDispatchToProps)(Header);\n"]},"metadata":{},"sourceType":"module"}