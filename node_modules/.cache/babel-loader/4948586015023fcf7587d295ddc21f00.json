{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.focusNextLetter = currentLetter => {\n      const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n      let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n      if (lastNumberId > 5) {\n        const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n        nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n      }\n\n      return nextLetter.focus();\n    };\n\n    this.handleChange = _ref => {\n      let {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      } = _ref;\n      const attempt = `attempt${id.slice(1, 2)}`;\n      const letter = `letter${id.slice(4, 5)}`;\n      const {\n        setKey\n      } = this.props;\n      console.log(id);\n      this.setState(prevState => ({ ...prevState,\n        words: {\n          [attempt]: { ...prevState.words[attempt],\n            [letter]: key\n          }\n        }\n      }));\n      setKey(key);\n      this.focusNextLetter(id);\n    };\n\n    this.handleKeyDown = _ref2 => {\n      let {\n        key\n      } = _ref2;\n      console.log(key);\n      if (key === 'Enter') this.handleEnterKey();\n    };\n\n    this.handleEnterKey = () => {\n      console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n    };\n\n    this.renderForm = () => {\n      for (let i = 1; i <= ATTEMPTS; i += 1) {\n        return /*#__PURE__*/_jsxDEV(\"form\", {\n          id: `attempt-${i}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l1`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter1,\n            onChange: this.handleChange,\n            autoFocus: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l2`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter2,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l3`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter3,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l4`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter4,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l5`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter5,\n            onChange: this.handleChange,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        }\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      keyDown\n    } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({\n        keyTyped: keyDown\n      });\n    }\n  }\n\n  render() {\n    const {\n      keyTyped,\n      words: {\n        attempt1: {\n          letter1,\n          letter2,\n          letter3,\n          letter4,\n          letter5\n        }\n      }\n    } = this.state;\n    if (keyTyped === 'Enter') this.handleEnterKey(); // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref3 => {\n  let {\n    keyDown\n  } = _ref3;\n  return {\n    keyDown\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: key => dispatch(sendKeyDown(key))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js"],"names":["React","Component","connect","sendKeyDown","ATTEMPTS","Game","constructor","focusNextLetter","currentLetter","lastNumberId","Number","substring","nextLetter","document","querySelector","nextAttempt","focus","handleChange","nativeEvent","data","key","target","id","attempt","slice","letter","setKey","props","console","log","setState","prevState","words","handleKeyDown","handleEnterKey","renderForm","i","letter1","letter2","letter3","letter4","letter5","state","keyTyped","attempt1","componentDidUpdate","prevProps","keyDown","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keyDown } = this.props;\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({ keyTyped: keyDown });\n    }\n  }\n\n  focusNextLetter = (currentLetter) => {\n    const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n    let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n    if (lastNumberId > 5) {\n      const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n      nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n    }\n\n    return nextLetter.focus();\n  };\n\n  handleChange = ({ nativeEvent: { data: key }, target: { id } }) => {\n    const attempt = `attempt${id.slice(1 , 2)}`;\n    const letter = `letter${id.slice(4, 5)}`;\n\n    const { setKey } = this.props;\n\n    console.log(id);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      words: {\n        [attempt]: {\n          ...prevState.words[attempt],\n          [letter]: key,\n    }}}));\n\n    setKey(key);\n    this.focusNextLetter(id);\n  }\n\n  handleKeyDown = ({ key }) => {\n    console.log(key);\n    if (key === 'Enter') this.handleEnterKey();\n  }\n\n  handleEnterKey = () => {\n    console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n  }\n\n  renderForm = () => {\n    for (let i = 1; i <= ATTEMPTS; i += 1) {\n      return (\n        <form id={`attempt-${i}`}>\n          <input id={`a${i}-l1`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter1 } onChange={ this.handleChange } autoFocus />\n          <input id={`a${i}-l2`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter2 } onChange={ this.handleChange } />\n          <input id={`a${i}-l3`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter3 } onChange={ this.handleChange } />\n          <input id={`a${i}-l4`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter4 } onChange={ this.handleChange } />\n          <input id={`a${i}-l5`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter5 } onChange={ this.handleChange } onKeyDown={ this.handleKeyDown } />\n        </form>\n      );\n    }\n  }\n\n  render() {\n    const { keyTyped, words: { attempt1: { letter1, letter2, letter3, letter4, letter5,  } } } = this.state;\n    \n    if (keyTyped === 'Enter') this.handleEnterKey();\n\n    // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return (\n      <main>\n        { this.renderForm() }\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ keyDown }) => ({\n  keyDown,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key) => dispatch(sendKeyDown(key)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}