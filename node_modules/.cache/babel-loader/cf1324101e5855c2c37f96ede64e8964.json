{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown, enableEnter } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\nimport { selectWord, validateWord, focusNextLetter } from '../services/functions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      } = _ref;\n      const attempt = `attempt${id.slice(1, 2)}`;\n      const letter = `letter${id.slice(4, 5)}`;\n      const {\n        setKey,\n        enableEnter\n      } = this.props;\n      this.setState(prevState => ({ ...prevState,\n        words: { ...prevState.words,\n          [attempt]: { ...prevState.words[attempt],\n            [letter]: key.toUpperCase()\n          }\n        }\n      }));\n      setKey(key);\n      if (id.substring(4, 5) === '5') return enableEnter();\n      focusNextLetter(id);\n    };\n\n    this.handleEnterKey = () => {\n      const attemptId = `attempt${document.querySelector('.letterOnFocus').id.substring(1, 2)}`;\n      const {\n        words: {\n          [attemptId]: attempt\n        },\n        word\n      } = this.state;\n      const wordTried = Object.values(attempt);\n      if (word === wordTried.join('')) return console.log('colocar todas palavras verde e chamar o placar');\n      validateWord(word, [...wordTried], attemptId);\n      this.setState(prevAttempt => ({ ...prevAttempt,\n        currentAttempt: prevAttempt.currentAttempt + 1\n      }), () => {\n        const attemptNumber = `a${Number(attemptId.substring(7, 8)) + 1}`;\n        const attempt = document.querySelectorAll(`[id*=${attemptNumber}]`);\n        attempt.forEach(letter => letter.classList.remove('notCurrentAttemp'));\n      });\n    };\n\n    this.renderForm = () => {\n      const {\n        mobile,\n        currentAttempt,\n        words: {\n          attempt1: {\n            letter1: a1l1,\n            letter2: a1l2,\n            letter3: a1l3,\n            letter4: a1l4,\n            letter5: a1l5\n          },\n          attempt2: {\n            letter1: a2l1,\n            letter2: a2l2,\n            letter3: a2l3,\n            letter4: a2l4,\n            letter5: a2l5\n          },\n          attempt3: {\n            letter1: a3l1,\n            letter2: a3l2,\n            letter3: a3l3,\n            letter4: a3l4,\n            letter5: a3l5\n          },\n          attempt4: {\n            letter1: a4l1,\n            letter2: a4l2,\n            letter3: a4l3,\n            letter4: a4l4,\n            letter5: a4l5\n          },\n          attempt5: {\n            letter1: a5l1,\n            letter2: a5l2,\n            letter3: a5l3,\n            letter4: a5l4,\n            letter5: a5l5\n          },\n          attempt6: {\n            letter1: a6l1,\n            letter2: a6l2,\n            letter3: a6l3,\n            letter4: a6l4,\n            letter5: a6l5\n          }\n        }\n      } = this.state;\n      let formRendered = [];\n\n      for (let i = 1; i <= ATTEMPTS; i += 1) {\n        const newAttempt = [];\n\n        for (let j = 1; j <= ATTEMPTS - 1; j += 1) {\n          newAttempt.push( /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l${j}`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox notCurrentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l${j}`),\n            onChange: this.handleChange,\n            disabled: i !== currentAttempt ? true : false,\n            autoComplete: \"off\",\n            readOnly: mobile\n          }, `a${i}-l${j}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 11\n          }, this));\n        }\n\n        formRendered.push( /*#__PURE__*/_jsxDEV(\"form\", {\n          id: `attempt-${i}`,\n          children: newAttempt\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 9\n        }, this));\n      }\n\n      return formRendered;\n    };\n\n    this.state = {\n      mobile: false,\n      currentAttempt: 1,\n      keyTyped: '',\n      word: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    const firstLetter = document.querySelector('#a1-l1');\n    firstLetter.classList.add('letterOnFocus');\n    this.setState({\n      word: selectWord()\n    });\n    if (/Mobi|Android/i.test(navigator.userAgent)) this.setState({\n      mobile: true\n    });\n    return firstLetter.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      keyDown\n    } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      if (keyDown === 'ENTER') this.handleEnterKey();\n      const key = keyDown;\n      const id = document.querySelector('.letterOnFocus').id;\n      const keyPressed = {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      }; // this.handleChange(keyPressed);\n\n      this.setState({\n        keyTyped: keyDown\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref2 => {\n  let {\n    keyDown\n  } = _ref2;\n  return {\n    keyDown\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: key => dispatch(sendKeyDown(key)),\n  enableEnter: () => dispatch(enableEnter())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js"],"names":["React","Component","connect","sendKeyDown","enableEnter","ATTEMPTS","selectWord","validateWord","focusNextLetter","Game","constructor","handleChange","nativeEvent","data","key","target","id","attempt","slice","letter","setKey","props","setState","prevState","words","toUpperCase","substring","handleEnterKey","attemptId","document","querySelector","word","state","wordTried","Object","values","join","console","log","prevAttempt","currentAttempt","attemptNumber","Number","querySelectorAll","forEach","classList","remove","renderForm","mobile","attempt1","letter1","a1l1","letter2","a1l2","letter3","a1l3","letter4","a1l4","letter5","a1l5","attempt2","a2l1","a2l2","a2l3","a2l4","a2l5","attempt3","a3l1","a3l2","a3l3","a3l4","a3l5","attempt4","a4l1","a4l2","a4l3","a4l4","a4l5","attempt5","a5l1","a5l2","a5l3","a5l4","a5l5","attempt6","a6l1","a6l2","a6l3","a6l4","a6l5","formRendered","i","newAttempt","j","push","eval","keyTyped","componentDidMount","firstLetter","add","test","navigator","userAgent","focus","componentDidUpdate","prevProps","keyDown","keyPressed","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown, enableEnter } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\nimport { selectWord, validateWord, focusNextLetter } from '../services/functions';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      mobile: false,\n      currentAttempt: 1,\n      keyTyped: '',\n      word: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n      }\n    }\n  }\n\n  componentDidMount() {\n    const firstLetter = document.querySelector('#a1-l1');\n    firstLetter.classList.add('letterOnFocus');\n\n    this.setState({ word: selectWord() });\n\n    if (/Mobi|Android/i.test(navigator.userAgent)) this.setState({ mobile: true });\n\n    return firstLetter.focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keyDown } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      if (keyDown === 'ENTER') this.handleEnterKey();\n      \n      const key = keyDown;\n      const id = document.querySelector('.letterOnFocus').id;\n      const keyPressed = {\n        nativeEvent: { data: key },\n        target: { id }\n      };\n\n      // this.handleChange(keyPressed);\n      this.setState({ keyTyped: keyDown });\n    }\n  }\n\n  handleChange = ({ nativeEvent: { data: key }, target: { id } }) => {\n    const attempt = `attempt${id.slice(1 , 2)}`;\n    const letter = `letter${id.slice(4, 5)}`;\n\n    const { setKey, enableEnter } = this.props;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      words: {\n        ...prevState.words,\n        [attempt]: {\n          ...prevState.words[attempt],\n          [letter]: key.toUpperCase(),\n    }}}));\n\n    setKey(key);\n\n    if (id.substring(4, 5) === '5') return enableEnter();\n\n    focusNextLetter(id);\n  }\n\n  handleEnterKey = () => {\n    const attemptId = `attempt${document.querySelector('.letterOnFocus').id.substring(1, 2)}`;\n    const { words: { [attemptId]: attempt }, word } = this.state;\n    const wordTried = Object.values(attempt);\n    \n    if (word === wordTried.join('')) return console.log('colocar todas palavras verde e chamar o placar');\n    validateWord(word, [...wordTried], attemptId);\n    \n    this.setState((prevAttempt) => ({\n      ...prevAttempt,\n      currentAttempt: prevAttempt.currentAttempt + 1,\n    }), () => {\n      const attemptNumber = `a${Number(attemptId.substring(7, 8)) + 1}`;\n      const attempt = document.querySelectorAll(`[id*=${attemptNumber}]`);\n      attempt.forEach((letter) => letter.classList.remove('notCurrentAttemp'));\n    })\n  }\n\n  renderForm = () => {\n    const { \n      mobile,\n      currentAttempt,\n      words: {\n        attempt1: { letter1: a1l1, letter2: a1l2, letter3: a1l3, letter4: a1l4, letter5: a1l5 },\n        attempt2: { letter1: a2l1, letter2: a2l2, letter3: a2l3, letter4: a2l4, letter5: a2l5 },\n        attempt3: { letter1: a3l1, letter2: a3l2, letter3: a3l3, letter4: a3l4, letter5: a3l5 },\n        attempt4: { letter1: a4l1, letter2: a4l2, letter3: a4l3, letter4: a4l4, letter5: a4l5 },\n        attempt5: { letter1: a5l1, letter2: a5l2, letter3: a5l3, letter4: a5l4, letter5: a5l5 },\n        attempt6: { letter1: a6l1, letter2: a6l2, letter3: a6l3, letter4: a6l4, letter5: a6l5 },\n    } } = this.state;\n    let formRendered = [];\n\n    for (let i = 1; i <= ATTEMPTS; i += 1) {\n      const newAttempt = [];\n\n      for (let j = 1; j <= ATTEMPTS - 1; j += 1) {\n        newAttempt.push(\n          <input\n            key={ `a${i}-l${j}` }\n            id={ `a${i}-l${j}` }\n            type=\"text\"\n            className={ i !== 1 ? \"wordBox notCurrentAttemp\" : \"wordBox\" }\n            maxLength=\"1\"\n            value={ eval(`a${i}l${j}`) }\n            onChange={ this.handleChange }\n            disabled={ i !== currentAttempt ? true : false }\n            autoComplete=\"off\"\n            readOnly={ mobile }\n          />\n        );\n      }\n\n      formRendered.push(\n        <form id={ `attempt-${i}` } key={ i }>\n          {newAttempt}\n        </form>\n      );\n    }\n\n    return formRendered;\n  }\n\n  render() {\n    return (\n      <main>\n        { this.renderForm() }\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ keyDown }) => ({\n  keyDown,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key) => dispatch(sendKeyDown(key)),\n  enableEnter: () => dispatch(enableEnter()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}