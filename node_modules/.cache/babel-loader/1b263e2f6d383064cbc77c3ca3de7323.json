{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.focusNextLetter = currentLetter => {\n      const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n      let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n      if (lastNumberId > 5) {\n        const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n        nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n      }\n\n      if (currentLetter === 'a6-l5') return console.log('chamar o placar');\n      return nextLetter.focus();\n    };\n\n    this.handleChange = _ref => {\n      let {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      } = _ref;\n      const attempt = `attempt${id.slice(1, 2)}`;\n      const letter = `letter${id.slice(4, 5)}`;\n      const {\n        setKey\n      } = this.props;\n      this.setState(prevState => ({ ...prevState,\n        words: { ...prevState.words,\n          [attempt]: { ...prevState.words[attempt],\n            [letter]: key.toUpperCase()\n          }\n        }\n      }));\n      setKey(key);\n      this.focusNextLetter(id);\n    };\n\n    this.handleKeyDown = _ref2 => {\n      let {\n        key\n      } = _ref2;\n      if (key === 'Enter') this.handleEnterKey();\n    };\n\n    this.handleEnterKey = () => {\n      console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n    };\n\n    this.renderForm = () => {\n      const {\n        words: {\n          attempt1: {\n            letter1: a1l1,\n            letter2: a1l2,\n            letter3: a1l3,\n            letter4: a1l4,\n            letter5: a1l5\n          },\n          attempt2: {\n            letter1: a2l1,\n            letter2: a2l2,\n            letter3: a2l3,\n            letter4: a2l4,\n            letter5: a2l5\n          },\n          attempt3: {\n            letter1: a3l1,\n            letter2: a3l2,\n            letter3: a3l3,\n            letter4: a3l4,\n            letter5: a3l5\n          },\n          attempt4: {\n            letter1: a4l1,\n            letter2: a4l2,\n            letter3: a4l3,\n            letter4: a4l4,\n            letter5: a4l5\n          },\n          attempt5: {\n            letter1: a5l1,\n            letter2: a5l2,\n            letter3: a5l3,\n            letter4: a5l4,\n            letter5: a5l5\n          },\n          attempt6: {\n            letter1: a6l1,\n            letter2: a6l2,\n            letter3: a6l3,\n            letter4: a6l4,\n            letter5: a6l5\n          }\n        }\n      } = this.state;\n      let formRendered = [];\n\n      for (let i = 1; i <= ATTEMPTS; i += 1) {\n        formRendered.push( /*#__PURE__*/_jsxDEV(\"form\", {\n          id: `attempt-${i}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l1`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l1`),\n            onChange: this.handleChange,\n            disabled: i !== 1 ? true : false,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l2`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l2`),\n            onChange: this.handleChange,\n            disabled: i !== 1 ? true : false,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l3`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l3`),\n            onChange: this.handleChange,\n            disabled: i !== 1 ? true : false,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l4`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l4`),\n            onChange: this.handleChange,\n            disabled: i !== 1 ? true : false,\n            autoComplete: \"off\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l5`,\n            type: \"text\",\n            className: i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\",\n            maxLength: \"1\",\n            value: eval(`a${i}l5`),\n            onChange: this.handleChange,\n            disabled: i !== 1 ? true : false,\n            autoComplete: \"off\",\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this));\n      }\n\n      return formRendered;\n    };\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    return document.querySelector('#a1-l1').focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      keyDown\n    } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({\n        keyTyped: keyDown\n      });\n    }\n  }\n\n  render() {\n    const {\n      keyTyped\n    } = this.state;\n    if (keyTyped === 'Enter') this.handleEnterKey();\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref3 => {\n  let {\n    keyDown\n  } = _ref3;\n  return {\n    keyDown\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: key => dispatch(sendKeyDown(key))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js"],"names":["React","Component","connect","sendKeyDown","ATTEMPTS","Game","constructor","focusNextLetter","currentLetter","lastNumberId","Number","substring","nextLetter","document","querySelector","nextAttempt","console","log","focus","handleChange","nativeEvent","data","key","target","id","attempt","slice","letter","setKey","props","setState","prevState","words","toUpperCase","handleKeyDown","handleEnterKey","renderForm","attempt1","letter1","a1l1","letter2","a1l2","letter3","a1l3","letter4","a1l4","letter5","a1l5","attempt2","a2l1","a2l2","a2l3","a2l4","a2l5","attempt3","a3l1","a3l2","a3l3","a3l4","a3l5","attempt4","a4l1","a4l2","a4l3","a4l4","a4l5","attempt5","a5l1","a5l2","a5l3","a5l4","a5l5","attempt6","a6l1","a6l2","a6l3","a6l4","a6l5","state","formRendered","i","push","eval","keyTyped","componentDidMount","componentDidUpdate","prevProps","keyDown","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n      }\n    }\n  }\n\n  componentDidMount() {\n    return document.querySelector('#a1-l1').focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keyDown } = this.props;\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({ keyTyped: keyDown });\n    }\n  }\n\n  focusNextLetter = (currentLetter) => {\n    const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n    let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n    if (lastNumberId > 5) {\n      const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n      nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n    }\n\n    if (currentLetter === 'a6-l5') return console.log('chamar o placar');\n\n    return nextLetter.focus();\n  };\n\n  handleChange = ({ nativeEvent: { data: key }, target: { id } }) => {\n    const attempt = `attempt${id.slice(1 , 2)}`;\n    const letter = `letter${id.slice(4, 5)}`;\n\n    const { setKey } = this.props;\n\n    this.setState((prevState) => ({\n      ...prevState,\n      words: {\n        ...prevState.words,\n        [attempt]: {\n          ...prevState.words[attempt],\n          [letter]: key.toUpperCase(),\n    }}}));\n\n    setKey(key);\n    this.focusNextLetter(id);\n  }\n\n  handleKeyDown = ({ key }) => {\n    if (key === 'Enter') this.handleEnterKey();\n  }\n\n  handleEnterKey = () => {\n    console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n  }\n\n  renderForm = () => {\n    const { words: {\n      attempt1: { letter1: a1l1, letter2: a1l2, letter3: a1l3, letter4: a1l4, letter5: a1l5 },\n      attempt2: { letter1: a2l1, letter2: a2l2, letter3: a2l3, letter4: a2l4, letter5: a2l5 },\n      attempt3: { letter1: a3l1, letter2: a3l2, letter3: a3l3, letter4: a3l4, letter5: a3l5 },\n      attempt4: { letter1: a4l1, letter2: a4l2, letter3: a4l3, letter4: a4l4, letter5: a4l5 },\n      attempt5: { letter1: a5l1, letter2: a5l2, letter3: a5l3, letter4: a5l4, letter5: a5l5 },\n      attempt6: { letter1: a6l1, letter2: a6l2, letter3: a6l3, letter4: a6l4, letter5: a6l5 },\n    } } = this.state;\n    let formRendered = [];\n\n    for (let i = 1; i <= ATTEMPTS; i += 1) {\n      formRendered.push(\n        <form id={`attempt-${i}`} key={ i }>\n          {/* <input id={`a${i}-l1`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ eval(`a${i}l1`) } onChange={ this.handleChange } /> */}\n          <input id={`a${i}-l1`} type=\"text\" className={ i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\" } maxLength=\"1\" value={ eval(`a${i}l1`) } onChange={ this.handleChange } disabled={ i !== 1 ? true : false } autoComplete=\"off\" />\n          <input id={`a${i}-l2`} type=\"text\" className={ i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\" } maxLength=\"1\" value={ eval(`a${i}l2`) } onChange={ this.handleChange } disabled={ i !== 1 ? true : false } autoComplete=\"off\" />\n          <input id={`a${i}-l3`} type=\"text\" className={ i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\" } maxLength=\"1\" value={ eval(`a${i}l3`) } onChange={ this.handleChange } disabled={ i !== 1 ? true : false } autoComplete=\"off\" />\n          <input id={`a${i}-l4`} type=\"text\" className={ i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\" } maxLength=\"1\" value={ eval(`a${i}l4`) } onChange={ this.handleChange } disabled={ i !== 1 ? true : false } autoComplete=\"off\" />\n          <input id={`a${i}-l5`} type=\"text\" className={ i !== 1 ? \"wordBox currentAttemp\" : \"wordBox\" } maxLength=\"1\" value={ eval(`a${i}l5`) } onChange={ this.handleChange } disabled={ i !== 1 ? true : false } autoComplete=\"off\" onKeyDown={ this.handleKeyDown } />\n        </form>\n      );\n    }\n\n    return formRendered;\n  }\n\n  render() {\n    const { keyTyped } = this.state;\n    \n    if (keyTyped === 'Enter') this.handleEnterKey();\n\n    return (\n      <main>\n        { this.renderForm() }\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ keyDown }) => ({\n  keyDown,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key) => dispatch(sendKeyDown(key)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}