{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.focusNextLetter = currentLetter => {\n      const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n      let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n      if (lastNumberId > 5) {\n        const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n        nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n      }\n\n      return nextLetter.focus();\n    };\n\n    this.handleChange = _ref => {\n      let {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      } = _ref;\n      const attempt = `attempt${id.slice(1, 2)}`;\n      const letter = `letter${id.slice(4, 5)}`;\n      const {\n        setKey\n      } = this.props;\n      console.log(attempt);\n      this.setState(prevState => ({ ...prevState,\n        words: { ...words,\n          [attempt]: { ...prevState.words[attempt],\n            [letter]: key\n          }\n        }\n      }));\n      setKey(key);\n      this.focusNextLetter(id);\n    };\n\n    this.handleKeyDown = _ref2 => {\n      let {\n        key\n      } = _ref2;\n      console.log(key);\n      if (key === 'Enter') this.handleEnterKey();\n    };\n\n    this.handleEnterKey = () => {\n      console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n    };\n\n    this.renderForm = () => {\n      const {\n        words: {\n          attempt1: {\n            letter1,\n            letter2,\n            letter3,\n            letter4,\n            letter5\n          }\n        }\n      } = this.state;\n      let formRendered = [];\n\n      for (let i = 1; i <= ATTEMPTS; i += 1) {\n        formRendered.push( /*#__PURE__*/_jsxDEV(\"form\", {\n          id: `attempt-${i}`,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l1`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter1,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l2`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter2,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l3`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter3,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l4`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter4,\n            onChange: this.handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: `a${i}-l5`,\n            type: \"text\",\n            className: \"wordBox\",\n            maxLength: \"1\",\n            value: letter5,\n            onChange: this.handleChange,\n            onKeyDown: this.handleKeyDown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 9\n        }, this));\n      }\n\n      return formRendered;\n    };\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        }\n      }\n    };\n  }\n\n  componentDidMount() {\n    return document.querySelector('#a1-l1').focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      keyDown\n    } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({\n        keyTyped: keyDown\n      });\n    }\n  }\n\n  render() {\n    const {\n      keyTyped\n    } = this.state;\n    if (keyTyped === 'Enter') this.handleEnterKey(); // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref3 => {\n  let {\n    keyDown\n  } = _ref3;\n  return {\n    keyDown\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: key => dispatch(sendKeyDown(key))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js"],"names":["React","Component","connect","sendKeyDown","ATTEMPTS","Game","constructor","focusNextLetter","currentLetter","lastNumberId","Number","substring","nextLetter","document","querySelector","nextAttempt","focus","handleChange","nativeEvent","data","key","target","id","attempt","slice","letter","setKey","props","console","log","setState","prevState","words","handleKeyDown","handleEnterKey","renderForm","attempt1","letter1","letter2","letter3","letter4","letter5","state","formRendered","i","push","keyTyped","attempt2","attempt3","attempt4","attempt5","attempt6","componentDidMount","componentDidUpdate","prevProps","keyDown","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAC3BK,EAAAA,WAAW,GAAG;AACZ;;AADY,SA+DdC,eA/Dc,GA+DKC,aAAD,IAAmB;AACnC,YAAMC,YAAY,GAAGC,MAAM,CAACF,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,CAAN,GAAwC,CAA7D;AACA,UAAIC,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAwB,IAAGN,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,IAAgCF,YAAa,EAAxE,CAAjB;;AAEA,UAAIA,YAAY,GAAG,CAAnB,EAAsB;AACpB,cAAMM,WAAW,GAAGL,MAAM,CAACF,aAAa,CAACG,SAAd,CAAwB,CAAxB,EAA2B,CAA3B,CAAD,CAAN,GAAwC,CAA5D;AACAC,QAAAA,UAAU,GAAGC,QAAQ,CAACC,aAAT,CAAwB,KAAIC,WAAY,KAAxC,CAAb;AACD;;AAED,aAAOH,UAAU,CAACI,KAAX,EAAP;AACD,KAzEa;;AAAA,SA2EdC,YA3Ec,GA2EC,QAAoD;AAAA,UAAnD;AAAEC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR,SAAf;AAA8BC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAtC,OAAmD;AACjE,YAAMC,OAAO,GAAI,UAASD,EAAE,CAACE,KAAH,CAAS,CAAT,EAAa,CAAb,CAAgB,EAA1C;AACA,YAAMC,MAAM,GAAI,SAAQH,EAAE,CAACE,KAAH,CAAS,CAAT,EAAY,CAAZ,CAAe,EAAvC;AAEA,YAAM;AAAEE,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAEA,WAAKO,QAAL,CAAeC,SAAD,KAAgB,EAC5B,GAAGA,SADyB;AAE5BC,QAAAA,KAAK,EAAE,EACL,GAAGA,KADE;AAEL,WAACT,OAAD,GAAW,EACT,GAAGQ,SAAS,CAACC,KAAV,CAAgBT,OAAhB,CADM;AAET,aAACE,MAAD,GAAUL;AAFD;AAFN;AAFqB,OAAhB,CAAd;AASAM,MAAAA,MAAM,CAACN,GAAD,CAAN;AACA,WAAKb,eAAL,CAAqBe,EAArB;AACD,KA9Fa;;AAAA,SAgGdW,aAhGc,GAgGE,SAAa;AAAA,UAAZ;AAAEb,QAAAA;AAAF,OAAY;AAC3BQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,UAAIA,GAAG,KAAK,OAAZ,EAAqB,KAAKc,cAAL;AACtB,KAnGa;;AAAA,SAqGdA,cArGc,GAqGG,MAAM;AACrBN,MAAAA,OAAO,CAACC,GAAR,CAAY,gFAAZ;AACD,KAvGa;;AAAA,SAyGdM,UAzGc,GAyGD,MAAM;AACjB,YAAM;AAAEH,QAAAA,KAAK,EAAE;AAAEI,UAAAA,QAAQ,EAAE;AAAEC,YAAAA,OAAF;AAAWC,YAAAA,OAAX;AAAoBC,YAAAA,OAApB;AAA6BC,YAAAA,OAA7B;AAAsCC,YAAAA;AAAtC;AAAZ;AAAT,UAA6E,KAAKC,KAAxF;AACA,UAAIC,YAAY,GAAG,EAAnB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIxC,QAArB,EAA+BwC,CAAC,IAAI,CAApC,EAAuC;AACrCD,QAAAA,YAAY,CAACE,IAAb,eACE;AAAM,UAAA,EAAE,EAAG,WAAUD,CAAE,EAAvB;AAAA,kCACE;AAAO,YAAA,EAAE,EAAG,IAAGA,CAAE,KAAjB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,SAAS,EAAC,SAA7C;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,KAAK,EAAGP,OAA7E;AAAuF,YAAA,QAAQ,EAAG,KAAKpB;AAAvG;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAO,YAAA,EAAE,EAAG,IAAG2B,CAAE,KAAjB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,SAAS,EAAC,SAA7C;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,KAAK,EAAGN,OAA7E;AAAuF,YAAA,QAAQ,EAAG,KAAKrB;AAAvG;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAO,YAAA,EAAE,EAAG,IAAG2B,CAAE,KAAjB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,SAAS,EAAC,SAA7C;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,KAAK,EAAGL,OAA7E;AAAuF,YAAA,QAAQ,EAAG,KAAKtB;AAAvG;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE;AAAO,YAAA,EAAE,EAAG,IAAG2B,CAAE,KAAjB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,SAAS,EAAC,SAA7C;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,KAAK,EAAGJ,OAA7E;AAAuF,YAAA,QAAQ,EAAG,KAAKvB;AAAvG;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE;AAAO,YAAA,EAAE,EAAG,IAAG2B,CAAE,KAAjB;AAAuB,YAAA,IAAI,EAAC,MAA5B;AAAmC,YAAA,SAAS,EAAC,SAA7C;AAAuD,YAAA,SAAS,EAAC,GAAjE;AAAqE,YAAA,KAAK,EAAGH,OAA7E;AAAuF,YAAA,QAAQ,EAAG,KAAKxB,YAAvG;AAAsH,YAAA,SAAS,EAAG,KAAKgB;AAAvI;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF;AASD;;AACD,aAAOU,YAAP;AACD,KAxHa;;AAGZ,SAAKD,KAAL,GAAa;AACXI,MAAAA,QAAQ,EAAE,EADC;AAEXd,MAAAA,KAAK,EAAE;AACLI,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD,SADL;AAQLM,QAAAA,QAAQ,EAAE;AACRV,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD,SARL;AAeLO,QAAAA,QAAQ,EAAE;AACRX,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD,SAfL;AAsBLQ,QAAAA,QAAQ,EAAE;AACRZ,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD,SAtBL;AA6BLS,QAAAA,QAAQ,EAAE;AACRb,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD,SA7BL;AAoCLU,QAAAA,QAAQ,EAAE;AACRd,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD;AApCL;AAFI,KAAb;AA+CD;;AAEDW,EAAAA,iBAAiB,GAAG;AAClB,WAAOvC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,EAAiCE,KAAjC,EAAP;AACD;;AAEDqC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAK5B,KAAzB;;AACA,QAAI2B,SAAS,CAACC,OAAV,KAAsBA,OAA1B,EAAmC;AACjC,WAAKzB,QAAL,CAAc;AAAEgB,QAAAA,QAAQ,EAAES;AAAZ,OAAd;AACD;AACF;;AA6DDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEV,MAAAA;AAAF,QAAe,KAAKJ,KAA1B;AAEA,QAAII,QAAQ,KAAK,OAAjB,EAA0B,KAAKZ,cAAL,GAHnB,CAKP;AACA;AACA;;AAEA,wBACE;AAAA,gBACI,KAAKC,UAAL;AADJ;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAzI0B;;AA4I7B,MAAMsB,eAAe,GAAG;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SAAkB;AACxCA,IAAAA;AADwC,GAAlB;AAAA,CAAxB;;AAIA,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCjC,EAAAA,MAAM,EAAGN,GAAD,IAASuC,QAAQ,CAACxD,WAAW,CAACiB,GAAD,CAAZ;AADe,CAAf,CAA3B;;AAIA,eAAelB,OAAO,CAACuD,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CrD,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { ATTEMPTS } from '../services/constants';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt2: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt3: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt4: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt5: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n        attempt6: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        },\n      }\n    }\n  }\n\n  componentDidMount() {\n    return document.querySelector('#a1-l1').focus();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keyDown } = this.props;\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({ keyTyped: keyDown });\n    }\n  }\n\n  focusNextLetter = (currentLetter) => {\n    const lastNumberId = Number(currentLetter.substring(4, 5)) + 1;\n    let nextLetter = document.querySelector(`#${currentLetter.substring(0, 4) + lastNumberId}`);\n\n    if (lastNumberId > 5) {\n      const nextAttempt = Number(currentLetter.substring(1, 2)) + 1;\n      nextLetter = document.querySelector(`#a${nextAttempt}-l1`);\n    }\n\n    return nextLetter.focus();\n  };\n\n  handleChange = ({ nativeEvent: { data: key }, target: { id } }) => {\n    const attempt = `attempt${id.slice(1 , 2)}`;\n    const letter = `letter${id.slice(4, 5)}`;\n\n    const { setKey } = this.props;\n\n    console.log(attempt);\n\n    this.setState((prevState) => ({\n      ...prevState,\n      words: {\n        ...words,\n        [attempt]: {\n          ...prevState.words[attempt],\n          [letter]: key,\n    }}}));\n\n    setKey(key);\n    this.focusNextLetter(id);\n  }\n\n  handleKeyDown = ({ key }) => {\n    console.log(key);\n    if (key === 'Enter') this.handleEnterKey();\n  }\n\n  handleEnterKey = () => {\n    console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n  }\n\n  renderForm = () => {\n    const { words: { attempt1: { letter1, letter2, letter3, letter4, letter5,  } } } = this.state;\n    let formRendered = [];\n    for (let i = 1; i <= ATTEMPTS; i += 1) {\n      formRendered.push(\n        <form id={`attempt-${i}`}>\n          <input id={`a${i}-l1`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter1 } onChange={ this.handleChange } />\n          <input id={`a${i}-l2`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter2 } onChange={ this.handleChange } />\n          <input id={`a${i}-l3`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter3 } onChange={ this.handleChange } />\n          <input id={`a${i}-l4`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter4 } onChange={ this.handleChange } />\n          <input id={`a${i}-l5`} type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter5 } onChange={ this.handleChange } onKeyDown={ this.handleKeyDown } />\n        </form>\n      );\n    }\n    return formRendered;\n  }\n\n  render() {\n    const { keyTyped } = this.state;\n    \n    if (keyTyped === 'Enter') this.handleEnterKey();\n\n    // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return (\n      <main>\n        { this.renderForm() }\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ keyDown }) => ({\n  keyDown,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key) => dispatch(sendKeyDown(key)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}