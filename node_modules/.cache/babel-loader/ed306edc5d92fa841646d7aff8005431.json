{"ast":null,"code":"var _jsxFileName = \"/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.handleChange = _ref => {\n      let {\n        nativeEvent: {\n          data: key\n        },\n        target: {\n          id\n        }\n      } = _ref;\n      const {\n        setKey\n      } = this.props;\n      const attempt = id.slice(2, 3);\n      const letter = id.slice(4); // const { words: { attempt1: {\n      // } } } = this.state;\n\n      console.log(`attempt: ${attempt} letter ${letter}`);\n      setKey(key);\n      this.setState({});\n      console.log(id);\n    };\n\n    this.handleKeyDown = _ref2 => {\n      let {\n        key\n      } = _ref2;\n      console.log(key);\n      if (key === 'Enter') this.handleEnterKey();\n    };\n\n    this.handleEnterKey = () => {\n      console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n    };\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: ''\n        }\n      }\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      keyDown\n    } = this.props;\n\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({\n        keyTyped: keyDown\n      });\n    }\n  }\n\n  render() {\n    const {\n      keyTyped,\n      words: {\n        attempt1: {\n          letter1,\n          letter2,\n          letter3,\n          letter4,\n          letter5\n        }\n      }\n    } = this.state;\n    if (keyTyped === 'Enter') this.handleEnterKey(); // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        id: \"attempt-1\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"a1-l1\",\n          type: \"text\",\n          className: \"wordBox\",\n          maxLength: \"1\",\n          value: letter1,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"a1-l2\",\n          type: \"text\",\n          className: \"wordBox\",\n          maxLength: \"1\",\n          value: letter2,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"a1-l3\",\n          type: \"text\",\n          className: \"wordBox\",\n          maxLength: \"1\",\n          value: letter3,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"a1-l4\",\n          type: \"text\",\n          className: \"wordBox\",\n          maxLength: \"1\",\n          value: letter4,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"a1-l5\",\n          type: \"text\",\n          className: \"wordBox\",\n          maxLength: \"1\",\n          value: letter5,\n          onChange: this.handleChange,\n          onKeyDown: this.handleKeyDown\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = _ref3 => {\n  let {\n    keyDown\n  } = _ref3;\n  return {\n    keyDown\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  setKey: key => dispatch(sendKeyDown(key))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);","map":{"version":3,"sources":["/home/matheus/Documentos/Projetos/tryWord/try-word/src/components/Game.js"],"names":["React","Component","connect","sendKeyDown","Game","constructor","handleChange","nativeEvent","data","key","target","id","setKey","props","attempt","slice","letter","console","log","setState","handleKeyDown","handleEnterKey","state","keyTyped","words","attempt1","letter1","letter2","letter3","letter4","letter5","componentDidUpdate","prevProps","keyDown","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,WAAT,QAA4B,kBAA5B;;;AAEA,MAAMC,IAAN,SAAmBH,SAAnB,CAA6B;AAC3BI,EAAAA,WAAW,GAAG;AACZ;;AADY,SAwBdC,YAxBc,GAwBC,QAAoD;AAAA,UAAnD;AAAEC,QAAAA,WAAW,EAAE;AAAEC,UAAAA,IAAI,EAAEC;AAAR,SAAf;AAA8BC,QAAAA,MAAM,EAAE;AAAEC,UAAAA;AAAF;AAAtC,OAAmD;AACjE,YAAM;AAAEC,QAAAA;AAAF,UAAa,KAAKC,KAAxB;AACA,YAAMC,OAAO,GAAGH,EAAE,CAACI,KAAH,CAAS,CAAT,EAAa,CAAb,CAAhB;AACA,YAAMC,MAAM,GAAGL,EAAE,CAACI,KAAH,CAAS,CAAT,CAAf,CAHiE,CAIjE;AACA;;AAEAE,MAAAA,OAAO,CAACC,GAAR,CAAa,YAAWJ,OAAQ,WAAUE,MAAO,EAAjD;AAEAJ,MAAAA,MAAM,CAACH,GAAD,CAAN;AACA,WAAKU,QAAL,CAAc,EAAd;AAGAF,MAAAA,OAAO,CAACC,GAAR,CAAYP,EAAZ;AACD,KAtCa;;AAAA,SAwCdS,aAxCc,GAwCE,SAAa;AAAA,UAAZ;AAAEX,QAAAA;AAAF,OAAY;AAC3BQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,GAAZ;AACA,UAAIA,GAAG,KAAK,OAAZ,EAAqB,KAAKY,cAAL;AACtB,KA3Ca;;AAAA,SA6CdA,cA7Cc,GA6CG,MAAM;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,gFAAZ;AACD,KA/Ca;;AAGZ,SAAKI,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE,EADC;AAEXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,OAAO,EAAE,EADD;AAERC,UAAAA,OAAO,EAAE,EAFD;AAGRC,UAAAA,OAAO,EAAE,EAHD;AAIRC,UAAAA,OAAO,EAAE,EAJD;AAKRC,UAAAA,OAAO,EAAE;AALD;AADL;AAFI,KAAb;AAYD;;AAEDC,EAAAA,kBAAkB,CAACC,SAAD,EAAY;AAC5B,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKpB,KAAzB;;AACA,QAAImB,SAAS,CAACC,OAAV,KAAsBA,OAA1B,EAAmC;AACjC,WAAKd,QAAL,CAAc;AAAEI,QAAAA,QAAQ,EAAEU;AAAZ,OAAd;AACD;AACF;;AA2BDC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,QAAF;AAAYC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAEC,UAAAA,OAAF;AAAWC,UAAAA,OAAX;AAAoBC,UAAAA,OAApB;AAA6BC,UAAAA,OAA7B;AAAsCC,UAAAA;AAAtC;AAAZ;AAAnB,QAAuF,KAAKR,KAAlG;AAEA,QAAIC,QAAQ,KAAK,OAAjB,EAA0B,KAAKF,cAAL,GAHnB,CAKP;AACA;AACA;;AAEA,wBACE;AAAA,6BACE;AAAM,QAAA,EAAE,EAAC,WAAT;AAAA,gCACE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAgE,UAAA,KAAK,EAAGK,OAAxE;AAAkF,UAAA,QAAQ,EAAG,KAAKpB;AAAlG;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAgE,UAAA,KAAK,EAAGqB,OAAxE;AAAkF,UAAA,QAAQ,EAAG,KAAKrB;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAgE,UAAA,KAAK,EAAGsB,OAAxE;AAAkF,UAAA,QAAQ,EAAG,KAAKtB;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAgE,UAAA,KAAK,EAAGuB,OAAxE;AAAkF,UAAA,QAAQ,EAAG,KAAKvB;AAAlG;AAAA;AAAA;AAAA;AAAA,gBAJF,eAKE;AAAO,UAAA,EAAE,EAAC,OAAV;AAAkB,UAAA,IAAI,EAAC,MAAvB;AAA8B,UAAA,SAAS,EAAC,SAAxC;AAAkD,UAAA,SAAS,EAAC,GAA5D;AAAgE,UAAA,KAAK,EAAGwB,OAAxE;AAAkF,UAAA,QAAQ,EAAG,KAAKxB,YAAlG;AAAiH,UAAA,SAAS,EAAG,KAAKc;AAAlI;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAtE0B;;AAyE7B,MAAMe,eAAe,GAAG;AAAA,MAAC;AAAEF,IAAAA;AAAF,GAAD;AAAA,SAAkB;AACxCA,IAAAA;AADwC,GAAlB;AAAA,CAAxB;;AAIA,MAAMG,kBAAkB,GAAIC,QAAD,KAAe;AACxCzB,EAAAA,MAAM,EAAGH,GAAD,IAAS4B,QAAQ,CAAClC,WAAW,CAACM,GAAD,CAAZ;AADe,CAAf,CAA3B;;AAIA,eAAeP,OAAO,CAACiC,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChC,IAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { sendKeyDown } from '../store/actions';\n\nclass Game extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      keyTyped: '',\n      words: {\n        attempt1: {\n          letter1: '',\n          letter2: '',\n          letter3: '',\n          letter4: '',\n          letter5: '',\n        }\n      }\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    const { keyDown } = this.props;\n    if (prevProps.keyDown !== keyDown) {\n      this.setState({ keyTyped: keyDown });\n    }\n  }\n\n  handleChange = ({ nativeEvent: { data: key }, target: { id } }) => {\n    const { setKey } = this.props;\n    const attempt = id.slice(2 , 3);\n    const letter = id.slice(4);\n    // const { words: { attempt1: {\n    // } } } = this.state;\n\n    console.log(`attempt: ${attempt} letter ${letter}`);\n\n    setKey(key);\n    this.setState({\n\n    })\n    console.log(id);\n  }\n\n  handleKeyDown = ({ key }) => {\n    console.log(key);\n    if (key === 'Enter') this.handleEnterKey();\n  }\n\n  handleEnterKey = () => {\n    console.log('Chamar função que coloca a primeira letter box da próxima tentativa em seleção');\n  }\n\n  render() {\n    const { keyTyped, words: { attempt1: { letter1, letter2, letter3, letter4, letter5,  } } } = this.state;\n    \n    if (keyTyped === 'Enter') this.handleEnterKey();\n\n    // for (let i = 1; i <= 5; i += 1) {\n    //   if (eval(`letter${i}`).length === 0) console.log(`Letra ${i}`);\n    // }\n\n    return (\n      <main>\n        <form id=\"attempt-1\">\n          <input id=\"a1-l1\" type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter1 } onChange={ this.handleChange }/>\n          <input id=\"a1-l2\" type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter2 } onChange={ this.handleChange } />\n          <input id=\"a1-l3\" type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter3 } onChange={ this.handleChange } />\n          <input id=\"a1-l4\" type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter4 } onChange={ this.handleChange } />\n          <input id=\"a1-l5\" type=\"text\" className=\"wordBox\" maxLength=\"1\" value={ letter5 } onChange={ this.handleChange } onKeyDown={ this.handleKeyDown } />\n        </form>\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = ({ keyDown }) => ({\n  keyDown,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  setKey: (key) => dispatch(sendKeyDown(key)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}